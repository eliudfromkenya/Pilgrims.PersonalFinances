@page "/settings"
@using Pilgrims.PersonalFinances.Components.Shared
@using Pilgrims.PersonalFinances.Core.Localization.Interfaces
@using Pilgrims.PersonalFinances.Core.Models
@using Pilgrims.PersonalFinances.Core.Models.Enums
@using Pilgrims.PersonalFinances.Core.Services.Interfaces
@using Microsoft.Extensions.Logging
@inject ILocalizationService LocalizationService

<PageTitle>@LocalizationService.GetString("Settings") - @LocalizationService.GetString("PersonalFinance")</PageTitle>

<!-- Particle Background -->
<div class="fixed inset-0 overflow-hidden pointer-events-none">
    <div class="absolute inset-0 bg-gradient-to-br from-slate-50 via-gray-50 to-zinc-50 dark:from-gray-900 dark:via-slate-900 dark:to-zinc-900"></div>
    <div class="particles-container">
        @for (int i = 0; i < 25; i++)
        {
            <div class="particle" style="animation-delay: @(i * 0.15)s;"></div>
        }
    </div>
</div>

<!-- Main Content -->
<div class="relative z-10 min-h-screen p-6">
    <!-- Header Section -->
    <div class="mb-8">
        <div class="glass-card p-6 rounded-2xl border border-[var(--border-color)] backdrop-blur-lg bg-[var(--card-bg)]">
            <div class="flex items-center justify-between mb-4">
                <div>
                    <h1 class="text-4xl font-bold bg-gradient-to-r from-slate-600 to-gray-600 bg-clip-text text-transparent">
                        ‚öôÔ∏è @LocalizationService.GetString("SettingsAndPreferences")
                    </h1>
                    <p class="text-[var(--text-secondary)] mt-2">@LocalizationService.GetString("CustomizeYourExperience")</p>
                </div>
                <button @onclick="SaveSettingsAsync" 
                        disabled="@(isSaving || isLoading)"
                        class="px-6 py-3 bg-gradient-to-r from-slate-500 to-gray-600 text-white rounded-xl hover:shadow-lg transform hover:scale-105 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none">
                    @if (isSaving)
                    {
                        <span class="mr-2">‚è≥</span> <span>@LocalizationService.GetString("Saving")</span>
                    }
                    else
                    {
                        <span class="mr-2">üíæ</span> <span>@LocalizationService.GetString("SaveChanges")</span>
                    }
                </button>
            </div>
        </div>
    </div>

    <!-- Status Messages -->
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="mb-6 p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg">
            <div class="flex items-center">
                <span class="mr-2">‚ùå</span>
                <span>@errorMessage</span>
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="mb-6 p-4 bg-green-100 border border-green-400 text-green-700 rounded-lg">
            <div class="flex items-center">
                <span class="mr-2">‚úÖ</span>
                <span>@successMessage</span>
            </div>
        </div>
    }

    <!-- Settings Categories -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
        <!-- Account Settings -->
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10">
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-4 flex items-center">
                <span class="mr-2">üë§</span> @LocalizationService.GetString("AccountSettings")
            </h3>
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">@LocalizationService.GetString("FullName")</label>
                    <input type="text" value="John Doe" class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">@LocalizationService.GetString("EmailAddress")</label>
                    <input type="email" value="john.doe@example.com" class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">@LocalizationService.GetString("PhoneNumber")</label>
                    <input type="tel" value="+1 (555) 123-4567" class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">@LocalizationService.GetString("TimeZone")</label>
                    <select class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                        <option>@LocalizationService.GetString("EasternTime")</option>
                        <option>@LocalizationService.GetString("CentralTime")</option>
                        <option>@LocalizationService.GetString("MountainTime")</option>
                        <option>@LocalizationService.GetString("PacificTime")</option>
                    </select>
                </div>
                
                <button class="w-full px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm">
                    Change Password
                </button>
            </div>
        </div>

        <!-- Financial Preferences -->
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10">
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-4 flex items-center">
                <span class="mr-2">üí∞</span> Financial Preferences
            </h3>
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Default Currency</label>
                    <CurrencyAutocomplete 
                        @bind-Value="selectedCurrency"                       
                        Placeholder="Search and select currency..." />
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Date Format</label>
                    <select class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                        <option>MM/DD/YYYY</option>
                        <option>DD/MM/YYYY</option>
                        <option>YYYY-MM-DD</option>
                    </select>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Budget Period</label>
                    <select class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                        <option>Monthly</option>
                        <option>Weekly</option>
                        <option>Bi-weekly</option>
                        <option>Quarterly</option>
                    </select>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Default Account</label>
                    <select class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                        <option>Chase Checking</option>
                        <option>Savings Account</option>
                        <option>Credit Card</option>
                    </select>
                </div>
                
                <div class="flex items-center justify-between">
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Show Account Balances</span>
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" checked class="sr-only peer">
                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-slate-300 dark:peer-focus:ring-slate-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-slate-600"></div>
                    </label>
                </div>
            </div>
        </div>

        <!-- Notification Settings -->
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10">
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-4 flex items-center">
                <span class="mr-2">üîî</span> Notifications
            </h3>
            <div class="space-y-4">
                @{
                    var notificationSettings = new[]
                    {
                        new { Name = "Bill Reminders", Description = "Get notified before bills are due", Enabled = true },
                        new { Name = "Budget Alerts", Description = "Alerts when approaching budget limits", Enabled = true },
                        new { Name = "Goal Progress", Description = "Updates on financial goal progress", Enabled = false },
                        new { Name = "Investment Updates", Description = "Market changes and portfolio updates", Enabled = true },
                        new { Name = "Security Alerts", Description = "Account security notifications", Enabled = true },
                        new { Name = "Weekly Reports", Description = "Weekly financial summary emails", Enabled = false }
                    };
                }
                
                @foreach (var setting in notificationSettings)
                {
                    <div class="flex items-center justify-between p-3 bg-white/50 dark:bg-gray-700/50 rounded-lg">
                        <div class="flex-1">
                            <div class="font-medium text-gray-800 dark:text-white">@setting.Name</div>
                            <div class="text-sm text-gray-500">@setting.Description</div>
                        </div>
                        <label class="relative inline-flex items-center cursor-pointer">
                            <input type="checkbox" @(setting.Enabled ? "checked" : "") class="sr-only peer">
                            <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-slate-300 dark:peer-focus:ring-slate-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-slate-600"></div>
                        </label>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Privacy & Security -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <!-- Privacy Settings -->
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10">
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-4 flex items-center">
                <span class="mr-2">üîí</span> Privacy & Security
            </h3>
            <div class="space-y-4">
                <div class="flex items-center justify-between p-3 bg-white/50 dark:bg-gray-700/50 rounded-lg">
                    <div class="flex-1">
                        <div class="font-medium text-gray-800 dark:text-white">Two-Factor Authentication</div>
                        <div class="text-sm text-gray-500">Add an extra layer of security</div>
                    </div>
                    <button class="px-4 py-2 bg-green-500 text-white rounded-lg text-sm hover:bg-green-600 transition-colors">
                        Enabled
                    </button>
                </div>
                
                <div class="flex items-center justify-between p-3 bg-white/50 dark:bg-gray-700/50 rounded-lg">
                    <div class="flex-1">
                        <div class="font-medium text-gray-800 dark:text-white">Data Encryption</div>
                        <div class="text-sm text-gray-500">Encrypt sensitive financial data</div>
                    </div>
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" checked class="sr-only peer">
                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-slate-300 dark:peer-focus:ring-slate-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-slate-600"></div>
                    </label>
                </div>
                
                <div class="flex items-center justify-between p-3 bg-white/50 dark:bg-gray-700/50 rounded-lg">
                    <div class="flex-1">
                        <div class="font-medium text-gray-800 dark:text-white">Session Timeout</div>
                        <div class="text-sm text-gray-500">Auto-logout after inactivity</div>
                    </div>
                    <select class="px-3 py-1 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded text-sm">
                        <option>15 minutes</option>
                        <option>30 minutes</option>
                        <option>1 hour</option>
                        <option>Never</option>
                    </select>
                </div>
                
                <div class="flex items-center justify-between p-3 bg-white/50 dark:bg-gray-700/50 rounded-lg">
                    <div class="flex-1">
                        <div class="font-medium text-gray-800 dark:text-white">Login Notifications</div>
                        <div class="text-sm text-gray-500">Get notified of new logins</div>
                    </div>
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" checked class="sr-only peer">
                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-slate-300 dark:peer-focus:ring-slate-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-slate-600"></div>
                    </label>
                </div>
                
                <button class="w-full px-4 py-2 bg-gradient-to-r from-red-500 to-pink-600 text-white rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm">
                    Download My Data
                </button>
            </div>
        </div>

        <!-- App Preferences -->
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10">
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-4 flex items-center">
                <span class="mr-2">üé®</span> App Preferences
            </h3>
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Theme</label>
                    <div class="grid grid-cols-3 gap-2">
                        <button class="p-3 bg-white border-2 border-slate-500 rounded-lg text-center">
                            <div class="w-full h-8 bg-gradient-to-r from-white to-gray-100 rounded mb-2"></div>
                            <span class="text-xs">Light</span>
                        </button>
                        <button class="p-3 bg-gray-800 border-2 border-transparent rounded-lg text-center">
                            <div class="w-full h-8 bg-gradient-to-r from-gray-800 to-gray-900 rounded mb-2"></div>
                            <span class="text-xs text-white">Dark</span>
                        </button>
                        <button class="p-3 bg-gradient-to-r from-blue-100 to-purple-100 border-2 border-transparent rounded-lg text-center">
                            <div class="w-full h-8 bg-gradient-to-r from-blue-200 to-purple-200 rounded mb-2"></div>
                            <span class="text-xs">Auto</span>
                        </button>
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Dashboard Layout</label>
                    <select class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                        <option>Compact</option>
                        <option>Standard</option>
                        <option>Detailed</option>
                    </select>
                </div>
                
                <div class="flex items-center justify-between">
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Animations</span>
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" checked class="sr-only peer">
                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-slate-300 dark:peer-focus:ring-slate-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-slate-600"></div>
                    </label>
                </div>
                
                <div class="flex items-center justify-between">
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Sound Effects</span>
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" class="sr-only peer">
                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-slate-300 dark:peer-focus:ring-slate-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-slate-600"></div>
                    </label>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">@LocalizationService.GetString("Language")</label>
                    <div class="w-full">
                        <LanguageSelector />
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Default Page</label>
                    <select class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                        <option>Dashboard</option>
                        <option>Accounts</option>
                        <option>Transactions</option>
                        <option>Budget</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Data Management -->
    <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10 mb-8">
        <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-6 flex items-center">
            <span class="mr-2">üíæ</span> Data Management
        </h3>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Backup & Sync -->
            <div class="space-y-4">
                <h4 class="font-medium text-gray-800 dark:text-white">Backup & Sync</h4>
                
                <div class="flex items-center justify-between p-3 bg-white/50 dark:bg-gray-700/50 rounded-lg">
                    <div class="flex-1">
                        <div class="font-medium text-gray-800 dark:text-white">Auto Backup</div>
                        <div class="text-sm text-gray-500">Daily automatic backups</div>
                    </div>
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" checked class="sr-only peer">
                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-slate-300 dark:peer-focus:ring-slate-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-slate-600"></div>
                    </label>
                </div>
                
                <button class="w-full px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm">
                    Backup Now
                </button>
                
                <div class="text-xs text-gray-500">
                    Last backup: Today at 3:00 AM
                </div>
            </div>
            
            <!-- Import/Export -->
            <div class="space-y-4">
                <h4 class="font-medium text-gray-800 dark:text-white">Import/Export</h4>
                
                <button class="w-full px-4 py-2 bg-gradient-to-r from-green-500 to-emerald-600 text-white rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm">
                    Import Data
                </button>
                
                <button class="w-full px-4 py-2 bg-gradient-to-r from-purple-500 to-violet-600 text-white rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm">
                    Export to CSV
                </button>
                
                <button class="w-full px-4 py-2 bg-gradient-to-r from-orange-500 to-red-600 text-white rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm">
                    Export to PDF
                </button>
            </div>
            
            <!-- Data Retention -->
            <div class="space-y-4">
                <h4 class="font-medium text-gray-800 dark:text-white">Data Retention</h4>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Keep Data For</label>
                    <select class="w-full px-3 py-2 bg-white/50 dark:bg-gray-700/50 border border-white/20 rounded-lg focus:ring-2 focus:ring-slate-500 focus:border-transparent">
                        <option>1 Year</option>
                        <option>2 Years</option>
                        <option>5 Years</option>
                        <option>Forever</option>
                    </select>
                </div>
                
                <button class="w-full px-4 py-2 bg-gradient-to-r from-red-500 to-pink-600 text-white rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-sm">
                    Clear Old Data
                </button>
                
                <div class="text-xs text-gray-500">
                    Current data: 2.3 GB
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10 text-center hover:shadow-xl transition-all duration-300 cursor-pointer">
            <div class="text-4xl mb-3">üîß</div>
            <h4 class="font-semibold text-gray-800 dark:text-white mb-2">Advanced Settings</h4>
            <p class="text-sm text-gray-600 dark:text-gray-300">Configure advanced options</p>
        </div>
        
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10 text-center hover:shadow-xl transition-all duration-300 cursor-pointer">
            <div class="text-4xl mb-3">üì±</div>
            <h4 class="font-semibold text-gray-800 dark:text-white mb-2">Mobile App</h4>
            <p class="text-sm text-gray-600 dark:text-gray-300">Download mobile app</p>
        </div>
        
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10 text-center hover:shadow-xl transition-all duration-300 cursor-pointer">
            <div class="text-4xl mb-3">‚ùì</div>
            <h4 class="font-semibold text-gray-800 dark:text-white mb-2">Help & Support</h4>
            <p class="text-sm text-gray-600 dark:text-gray-300">Get help and support</p>
        </div>
        
        <div class="glass-card p-6 rounded-2xl border border-white/20 backdrop-blur-lg bg-white/10 dark:bg-gray-800/10 text-center hover:shadow-xl transition-all duration-300 cursor-pointer">
            <div class="text-4xl mb-3">üö™</div>
            <h4 class="font-semibold text-gray-800 dark:text-white mb-2">Sign Out</h4>
            <p class="text-sm text-gray-600 dark:text-gray-300">Sign out of your account</p>
        </div>
    </div>
</div>

<style>
    .particles-container {
        position: absolute;
        width: 100%;
        height: 100%;
        overflow: hidden;
    }

    .particle {
        position: absolute;
        width: 3px;
        height: 3px;
        background: linear-gradient(45deg, #64748b, #475569);
        border-radius: 50%;
        animation: float 8s ease-in-out infinite;
        opacity: 0.7;
    }

    .particle:nth-child(odd) {
        left: 15%;
        animation-duration: 10s;
    }

    .particle:nth-child(even) {
        right: 15%;
        animation-duration: 12s;
    }

    @@keyframes float {
        0%, 100% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
        10% { opacity: 0.7; }
        90% { opacity: 0.7; }
        50% { transform: translateY(-10vh) rotate(180deg); }
    }

    .glass-card {
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    }
</style>

@code {
    [Inject] private IApplicationSettingsService ApplicationSettingsService { get; set; } = default!;
    [Inject] private ILogger<Settings> Logger { get; set; } = default!;

    private string selectedCurrency = "USD";
    private ApplicationSettings? currentSettings;
    private bool isLoading = false;
    private bool isSaving = false;
    private string? errorMessage;
    private string? successMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadSettingsAsync();
    }

    private async Task LoadSettingsAsync()
    {
        try
        {
            isLoading = true;
            errorMessage = null;

            currentSettings = await ApplicationSettingsService.GetSettingsAsync();
            selectedCurrency = currentSettings.DefaultCurrency ?? "USD";

            Logger.LogInformation("Settings loaded successfully. Default currency: {Currency}", selectedCurrency);
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load settings. Please try again.{ex.Message}";
            Logger.LogError(ex, "Error loading application settings");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task SaveSettingsAsync()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(selectedCurrency))
            {
                errorMessage = "Please select a currency.";
                return;
            }

            isSaving = true;
            errorMessage = null;
            successMessage = null;

            await ApplicationSettingsService.UpdateDefaultCurrencyAsync(selectedCurrency);
            
            successMessage = "Settings saved successfully!";
            Logger.LogInformation("Settings saved successfully. Currency updated to: {Currency}", selectedCurrency);
            
            // Clear success message after 3 seconds
            _ = Task.Delay(3000).ContinueWith(_ => 
            {
                successMessage = null;
                InvokeAsync(StateHasChanged);
            });
        }
        catch (Exception ex)
        {
            errorMessage = "Failed to save settings. Please try again.";
            Logger.LogError(ex, "Error saving application settings");
        }
        finally
        {
            isSaving = false;
            StateHasChanged();
        }
    }

    private void OnCurrencyChanged(string newCurrency)
    {
        selectedCurrency = newCurrency;
        Logger.LogDebug("Currency selection changed to: {Currency}", newCurrency);
        StateHasChanged();
    }
}