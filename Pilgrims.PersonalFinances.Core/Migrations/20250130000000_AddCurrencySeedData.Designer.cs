// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pilgrims.PersonalFinances.Data;

#nullable disable

namespace Pilgrims.PersonalFinances.Core.Migrations
{
    [DbContext(typeof(PersonalFinanceContext))]
    [Migration("20250130000000_AddCurrencySeedData")]
    partial class AddCurrencySeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            // This is a simplified model snapshot for the currency seed data migration
            // The actual model would include all entities, but for seed data we only need the basic structure
            
            modelBuilder.Entity("Pilgrims.PersonalFinances.Core.Models.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ISOCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("SymbolOrSign")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });
#pragma warning restore 612, 618
        }
    }
}